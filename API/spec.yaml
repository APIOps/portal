swagger: '2.0'
info:
  version: 0.0.1
  title: APIOps Events (Simple)
  description: A simple API for retrieving APIOps events information (swagger-2.0 specification)
  termsOfService: 'http://apiops/terms/'
  contact:
    name: Jarkko Moilanen
    email: jarkko.moilanen@apiops.net
    url: 'http://apiops.net'
  license:
    name: MIT
    url: 'http://opensource.org/licenses/MIT'
host: apinf.io
basePath: /apiopsevents
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /events:
    get:
      description: Returns all events from the system that the user has access to
      operationId: findEvents
      produces:
        - application/json
      parameters:
        - name: city
          in: query
          description: cities to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: event response
          schema:
            type: array
            title: Events
            items:
              $ref: '#/definitions/event'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'

  '/event':
    post:
      description: Creates a new event in the portal.  
      operationId: addPet
      produces:
        - application/json
      parameters:
        - name: pet
          in: body
          description: Event to be added
          required: true
          schema:
            $ref: '#/definitions/newEvent'
      responses:
        '200':
          description: event response
          schema:
            $ref: '#/definitions/event'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  '/event/{id}':
    get:
      description: 'Returns details of one event'
      operationId: findPetById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of event to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: event response
          schema:
            $ref: '#/definitions/event'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single event based on the ID supplied
      operationId: deleteEvent
      parameters:
        - name: id
          in: path
          description: ID of event to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: event deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
            

  '/event/{id}/participants':
    get:
      description: 'Returns participants of one event'
      operationId: findEventParticipantsById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of event to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: event response
          title: Participants
          schema:
            type: array
            items:
              $ref: '#/definitions/participant'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
            
definitions:
  event:
    type: object
    required:
      - id
      - title
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      participantCount:
        type: integer
      imageUrl:
        type: string
      eventUrl:
        type: string
      class: 
        type: string 
      city:
        type: string
      address:
        type: string
      zipcode: 
        type: string
      description: 
        type: string
      startdate:
        type: string
        format: date
      enddate:
        type: string
        format: date      
  newEvent:
    type: object
    required:
      - title
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      city:
        type: string
      description: 
        type: string
      startdate:
        type: string
        format: date
      enddate:
        type: string
        format: date 
  participant:
    type: object
    required:
      - id
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
